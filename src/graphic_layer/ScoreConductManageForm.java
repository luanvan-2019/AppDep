/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graphic_layer;

import business_layer.ClassBusiness;
import business_layer.ExcelService;
import business_layer.ScoreBusiness;
import business_layer.StudentBusiness;
import business_layer.SubjectBusiness;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import model.ClassModel;
import model.ConductModel;
import model.ScoreModel;
import model.StudentModel;
import model.SubjectModel;
import org.apache.commons.lang3.StringUtils;

/**
 * ScoreConductManageForm
 */
public class ScoreConductManageForm extends javax.swing.JInternalFrame {

    private final StudentBusiness studentBS = new StudentBusiness();

    private final ClassBusiness classBS = new ClassBusiness();

    private final ScoreBusiness scoreBS = new ScoreBusiness();

    private final SubjectBusiness subjectBS = new SubjectBusiness();

    private final ExcelService excelService = new ExcelService();

    private DefaultTableModel dtm;

    // List of students with score and conduct information
    private List<StudentModel> studentsWithScore;

    /**
     * Creates new form ScoreConductManageForm
     */
    public ScoreConductManageForm() {
        initComponents();
        this.setFrameIcon(new ImageIcon(""));

        // Load class ID
        loadClassID();
        // Set class name label empty
        lbClassName.setText("");
        // Load students with score and conduct information
        studentsWithScore = studentBS.getAll();
        loadStudentWithScore();
        // Load header of table score and table conduct
        loadScore(new ArrayList<>());
        loadConduct(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel9 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbStudentWithScore = new javax.swing.JTable();
        jLabel26 = new javax.swing.JLabel();
        cbbClassID = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        lbClassName = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tbScore = new javax.swing.JTable();
        btnExportScore = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tbConduct = new javax.swing.JTable();
        btnExportConduct = new javax.swing.JButton();

        setTitle("Xem điểm, hạnh kiểm");
        setVisible(true);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Danh sách sinh viên trong lớp", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 3, 12), new java.awt.Color(0, 0, 153))); // NOI18N

        tbStudentWithScore.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbStudentWithScore.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbStudentWithScoreMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tbStudentWithScore);

        jLabel26.setText("Mã lớp:");

        cbbClassID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        cbbClassID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbClassIDActionPerformed(evt);
            }
        });

        jLabel27.setText("Tên lớp:");

        lbClassName.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        lbClassName.setForeground(new java.awt.Color(0, 102, 0));
        lbClassName.setText("class name");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbbClassID, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbClassName, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(cbbClassID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27)
                    .addComponent(lbClassName))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Thông tin điểm", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 3, 12), new java.awt.Color(0, 0, 153))); // NOI18N

        tbScore.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane8.setViewportView(tbScore);

        btnExportScore.setIcon(new javax.swing.ImageIcon(getClass().getResource("/model/images/excel.png"))); // NOI18N
        btnExportScore.setEnabled(false);
        btnExportScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportScoreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(btnExportScore)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(btnExportScore)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Thông tin hạnh kiểm", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 3, 12), new java.awt.Color(0, 0, 153))); // NOI18N

        tbConduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane7.setViewportView(tbConduct);

        btnExportConduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/model/images/excel.png"))); // NOI18N
        btnExportConduct.setEnabled(false);
        btnExportConduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportConductActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(btnExportConduct)
                        .addGap(0, 221, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(btnExportConduct)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(185, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbStudentWithScoreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbStudentWithScoreMouseClicked
        int row = tbStudentWithScore.getSelectedRow();
        StudentModel student = studentsWithScore.get(row);
        List<ScoreModel> scores = scoreBS.searchScore(student.getId(), StringUtils.EMPTY);
        loadScore(scores);
        ConductModel conduct = studentBS.getConductByStudentID(student.getId());
        loadConduct(conduct);

        // Enable button export excel
        btnExportScore.setEnabled(true);
        btnExportConduct.setEnabled(true);
    }//GEN-LAST:event_tbStudentWithScoreMouseClicked

    private void cbbClassIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbClassIDActionPerformed
        btnExportScore.setEnabled(false);
        btnExportConduct.setEnabled(false);
        loadScore(new ArrayList<>());
        loadConduct(null);
        if (cbbClassID.getSelectedIndex() <= 0) {
            lbClassName.setText("");
            studentsWithScore = studentBS.getAll();
            loadStudentWithScore();
            return;
        }

        String classID = cbbClassID.getSelectedItem().toString();
        ClassModel classModel = classBS.getByID(classID);
        lbClassName.setText(classModel.getName());
        studentsWithScore = studentBS.getStudentsInClass(classID);
        loadStudentWithScore();
    }//GEN-LAST:event_cbbClassIDActionPerformed

    private void btnExportScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportScoreActionPerformed
        JFileChooser fileChooser = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int r = fileChooser.showOpenDialog(null);
        String file = "ThongTinDiem.xlsx";
        if (r == JFileChooser.APPROVE_OPTION) {
            String path = fileChooser.getSelectedFile().getAbsolutePath();
            if (StringUtils.endsWith(path, "\\")) {
                file = path + file;
            } else {
                file = path + "\\" + file;
            }

            List<List<Object>> scores = new ArrayList<>();
            for (int i = 0; i < tbScore.getRowCount(); i++) {
                List<Object> score = new ArrayList<>();
                score.add(tbScore.getValueAt(i, 0));
                score.add(tbScore.getValueAt(i, 1));
                score.add(tbScore.getValueAt(i, 2));
                score.add(tbScore.getValueAt(i, 3));
                scores.add(score);
            }

            String className = lbClassName.getText();
            int row = tbStudentWithScore.getSelectedRow();
            StudentModel student = studentsWithScore.get(row);
            boolean isExported = excelService.exportScore(file, className,
                    student.getId(), student.getName(), scores);
            if (isExported) {
                JOptionPane.showMessageDialog(this, "Export excel thành công: " + file,
                        "Info", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Export excel thất bại!",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnExportScoreActionPerformed

    private void btnExportConductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportConductActionPerformed
        JFileChooser fileChooser = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int r = fileChooser.showOpenDialog(null);
        String file = "ThongTinHanhKiem.xlsx";
        if (r == JFileChooser.APPROVE_OPTION) {
            String path = fileChooser.getSelectedFile().getAbsolutePath();
            if (StringUtils.endsWith(path, "\\")) {
                file = path + file;
            } else {
                file = path + "\\" + file;
            }

            List<List<Object>> conducts = new ArrayList<>();
            for (int i = 0; i < tbConduct.getRowCount(); i++) {
                List<Object> conduct = new ArrayList<>();
                conduct.add(tbConduct.getValueAt(i, 0));
                conduct.add(tbConduct.getValueAt(i, 1));
                conducts.add(conduct);
            }

            String className = lbClassName.getText();
            int row = tbStudentWithScore.getSelectedRow();
            StudentModel student = studentsWithScore.get(row);
            boolean isExported = excelService.exportConduct(file, className,
                    student.getId(), student.getName(), conducts);
            if (isExported) {
                JOptionPane.showMessageDialog(this, "Export excel thành công: " + file,
                        "Info", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Export excel thất bại!",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnExportConductActionPerformed

    // Load class IDs
    private void loadClassID() {
        List<String> ids = classBS.getIDs();
        ids.forEach(item -> {
            cbbClassID.addItem(item);
        });
    }

    private void loadScore(List<ScoreModel> scores) {
        Vector<String> columns = new Vector<>();
        columns.add("Môn Học");
        columns.add("Điểm Quá Trình");
        columns.add("Điểm KTHP");
        columns.add("Điểm Tổng Kết");

        Vector<Vector> datas = new Vector<>();
        for (ScoreModel score : scores) {
            Vector rows = new Vector();
            SubjectModel subject = subjectBS.getByID(score.getSubjectID());
            rows.add(subject.getName());
            rows.add(score.getProcessScore());
            rows.add(score.getFinalScore());
            rows.add(score.getTotalScore());
            datas.add(rows);
        }
        dtm = new DefaultTableModel(datas, columns);
        tbScore.setModel(dtm);
        // Set size for column in the table

        TableColumnModel columnModel = tbScore.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(80);
        columnModel.getColumn(1).setPreferredWidth(80);
        columnModel.getColumn(2).setPreferredWidth(80);
        columnModel.getColumn(3).setPreferredWidth(80);
    }

    private void loadConduct(ConductModel conduct) {
        Vector<String> columns = new Vector<>();
        columns.add("Học Kỳ");
        columns.add("Hạnh Kiểm");

        Vector<Vector> datas = new Vector<>();
        if (conduct != null) {
            for (int i = 1; i <= 8; i++) {
                Vector rows = new Vector();
                rows.add("Học kỳ " + i);
                switch (i) {
                    case 1:
                        rows.add(conduct.getSem1());
                        break;
                    case 2:
                        rows.add(conduct.getSem2());
                        break;
                    case 3:
                        rows.add(conduct.getSem3());
                        break;
                    case 4:
                        rows.add(conduct.getSem4());
                        break;
                    case 5:
                        rows.add(conduct.getSem5());
                        break;
                    case 6:
                        rows.add(conduct.getSem6());
                        break;
                    case 7:
                        rows.add(conduct.getSem7());
                        break;
                    case 8:
                        rows.add(conduct.getSem8());
                        break;
                    default:
                        break;
                }
                datas.add(rows);
            }
        }
        dtm = new DefaultTableModel(datas, columns);
        tbConduct.setModel(dtm);
    }

    private void loadStudentWithScore() {
        Vector<String> columns = new Vector<>();
        columns.add("Mã SV");
        columns.add("Họ Tên");

        Vector<Vector> datas = new Vector<>();
        for (StudentModel student : studentsWithScore) {
            Vector rows = new Vector();
            rows.add(student.getId());
            rows.add(student.getName());
            datas.add(rows);
        }
        dtm = new DefaultTableModel(datas, columns);
        tbStudentWithScore.setModel(dtm);
        // Set size for column in the table

        TableColumnModel columnModel = tbStudentWithScore.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(40);
        columnModel.getColumn(1).setPreferredWidth(160);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExportConduct;
    private javax.swing.JButton btnExportScore;
    private javax.swing.JComboBox<String> cbbClassID;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JLabel lbClassName;
    private javax.swing.JTable tbConduct;
    private javax.swing.JTable tbScore;
    private javax.swing.JTable tbStudentWithScore;
    // End of variables declaration//GEN-END:variables
}
